$(function () { $(window).on("load", function () { BgCreate(); LogoCreate(); LoginTypeCreate(); userInfoInset() }); var userInfoInset = function () { var un = getCookie("user-info"); var userNode = $("input.email-name"); if (un && userNode.length) { userNode.val(un) } }; var BgCreate = function () { var $bgWrap = $(".bg-wrap"); var imgPath = imgPathGet(); var bgImg = "<img class='hide-img' data-origin='" + imgPath.original + "'src='" + imgPath.vague + "'/>"; var bgCoverNode = '<div class="bg-cover" style="background-image:url(' + imgPath.vague + ')"></div>'; $bgWrap.append(bgImg); $bgWrap.append(bgCoverNode); var hideImg = $(".hide-img"); var bgCover = $(".bg-cover"); bgCoverSwitch(hideImg, bgCover); $(".bg-cover").backgroundcover(); $(".bg-cover").data("backgroundcover").setSafearea("50%,50%,50%,50%") }; var ctLocalPath = function () { var ck = parseInt(getCookie("gms-getImgLoaded")); ck = ck ? ck < 4 ? ck + 1 : 1 : 1; createCookie("gms-getImgLoaded", ck, 20); var lcPath = defaultUrl.bg; var defautUrlArray = lcPath.split("_s."); var newUrl = defautUrlArray[0]; var url2 = newUrl.substr(0, newUrl.length - 1) + ck; var newPath = url2 + "_s." + defautUrlArray[1]; return newPath }; var imgPathGet = function () { var imgPath = loginData.bgUrl || ctLocalPath(); var pathPart = imgPath.split("_s."); var imgName = pathPart[0] || "images/bg/bg-1"; var imgFormat = pathPart[1] || "jpg"; return { vague: imgName + "_s." + imgFormat, original: imgName + "_h." + imgFormat } }; var bgCoverSwitch = function (hideImg, bgCover) { var hdUrl = hideImg.attr("data-origin"); var img = new Image; img.onload = function () { hideImg.attr("src", hdUrl); bgCover.css({ backgroundImage: "url(" + hdUrl + ")" }).addClass("fide-in"); bgCover.find("img").attr({ src: hdUrl }) }; img.src = hdUrl }; var LogoCreate = function () { var logoPart = $(".logo-part"); logoSrc = loginData.logoImgUrl || defaultUrl.logo; var logoNode = '<img class="logo-img" src="' + logoSrc + '" alt="logo">'; logoPart.append(logoNode) }; var loginTypeList = ""; var LoginTypeCreate = function () { var loginSwitch = $(".login-type-box"); var domList = ""; var defaultMode = ""; var loginMode = loginData.loginMode || []; $.each(loginMode, function (index, item) { loginTypeList += " for-" + item.type; var sepClass = index ? "item-sepr" : ""; var isCurrent = ""; if (item.type == loginData.defaultMode) { isCurrent = "current"; defaultMode = "for-" + item.type; $("#login-box").addClass(defaultMode) } var mappingItemInfo = mapping[item.type]; if (mappingItemInfo) { domList += '<div class="login-item ' + sepClass + " " + isCurrent + '" desc-data="' + mapping[item.type].desc + '"><span class="icon ' + mapping[item.type].className + '"></span><span class="title">' + mapping[item.type].title + "</span></div>" } }); $("#login-box").removeClass(loginTypeList).addClass(defaultMode); loginSwitch.append(domList); LoginTypeSwitch() }; var LoginTypeSwitch = function () { var oprNode = $("#login-box"); $(".login-item").click(function (e) { ErroMsg(); var currentType = $(this).attr("desc-data"); if (currentType == "for-EnterpriseQQ") { var loginMode = loginData.loginMode; $.each(loginMode, function (index, item) { if (item && item.type == "EnterpriseQQ") { window.location.href = item.requestUrl } }) } else { oprNode.removeClass(loginTypeList).addClass(currentType) } $(this).addClass("current").siblings().removeClass("current") }) }; var clearInputVal = function () { $("input.form-item").each(function (item, index) { $(this).attr({ value: "" }) }); $(".illegal").removeClass("illegal") } }); $(function () { var n = $(".input-part input"); n.on("focus", function () { $(this).parents(".input-part").addClass("input-active") }).on("blur", function () { $(this).parents(".input-part").removeClass("input-active") }) }); $(function () { $(".email-name").on("blur", function () { var val = getFormItemVal($(this)); var superNode = $(this).parents(".input-part"); if (!inputValide(val, "isEmpty") && !(inputValide(val, "isEmail") || inputValide(val, "isPhone"))) { ErroMsg(errorMapping(-101), superNode) } else { ErroMsg("", superNode) } }); $(".email-name").on("keyup", function () { var superNode = $(this).parents(".input-part"); ErroMsg("", superNode) }) }); $(function () { $(".mobile-number").on("blur", function () { var superNode = $(this).parents(".input-part"); var val = getFormItemVal($(this)); if (val != "" && !inputValide(val, "isPhone")) { ErroMsg(errorMapping(-103), superNode) } else { ErroMsg("", superNode) } }); $(".mobile-number").on("keyup", function () { var superNode = $(this).parents(".input-part"); ErroMsg("", superNode) }) }); $(function () { var codeGettingBtn = $(".get-code"); codeGettingBtn.click(function () { var mobileNum = getFormItemVal($(".mobile-number")); if (inputValide(mobileNum, "isPhone")) { var n = $(this); var time = 90; var gettingCode = setInterval(function () { time--; if (time) { interValeGetting(time) } else { stopInterval(gettingCode) } }, 1e3); postAjax(gettingCode) } else if (mobileNum == "") { ErroMsg(errorMapping(-104)) } else { ErroMsg(errorMapping(-103)) } }); var interValeGetting = function (time) { $(".valid-code").addClass("code-getting"); codeGettingBtn.html(time + "s") }; var stopInterval = function (gettingCode) { window.clearInterval(gettingCode); $(".valid-code").removeClass("code-getting"); codeGettingBtn.html("获取验证码") }; var postAjax = function (gettingCode) { var u = "/api/v1/register/CheckMobileAndSendMessage"; var d = { mobile: getFormItemVal($("input.mobile-number")), type: 1 }; $.ajax({ url: u, type: "POST", data: d, dataType: "json", cache: false, async: true, success: function (resp) { if (resp.Code != 1) { var msg = resp.Message || ""; ErroMsg(msg); stopInterval(gettingCode) } }, error: function (resp) { } }) } }); $(function () { $(".check-default").click(function () { var n = $(this).find(".check-box"); var status = n.hasClass("ck-active"); n.toggleClass("ck-active").attr({ status: !status }) }) }); $(function () { $(".click-event-ban").click(function (e) { e.stopPropagation() }) }); $(function () { var valideImgNode = $(".vali-code-get img"); valideImgNode.attr({ src: G_Info.yzmUrl + "?v=" + (new Date).getTime() }); valideImgNode.click(function () { var yzmUrl = G_Info.yzmUrl + "?v=" + (new Date).getTime(); $(this).attr({ src: yzmUrl }) }) }); var addipple = function (e) { var node = $(".login-btn"); node.removeClass("logining"); var targetNodePosition = node.offset(); var mouseLeft = e.clientX; var mouseTop = e.clientY; var realLeft = mouseLeft - targetNodePosition.left; var realTop = mouseTop - targetNodePosition.top; node.find(".ripple").css({ left: realLeft, top: realTop }); node.addClass("logining") }; 
$(function () { $(".login-btn").click(function (e) { addipple(e); var currentLoginType = $(".login-item.current").attr("desc-data").split("-")[1]; var postData = {}; switch (currentLoginType) { case "account": postData = getAccountData(); break; case "mobilePhone": postData = getMobilePhoneData(); break; default: break } }); var loginSuccess = function (scuccss) { window.location.href = scuccss.Url }; var loginError = function (error) { $(".login-btn").removeClass("logining"); if (error.IsShowValCode) { var valideImgNode = $(".vali-code-get img"); valideImgNode.attr({ src: G_Info.yzmUrl + "?v=" + (new Date).getTime() }); var currentType = $(".login-item.current").attr("desc-data"); var isShowClassName = currentType.split("-")[1] + "-no-valide"; $("#login-box").removeClass(isShowClassName) } ErroMsg(errorMapping(error.Code)) }; var getMobilePhoneData = function () { var mobile = getFormItemVal($("input.mobile-number")); if (inputValide(mobile, "isEmpty")) { ErroMsg(errorMapping(-104)); return false } if (!inputValide(mobile, "isPhone")) { ErroMsg(errorMapping(-103)); return false } var mobileCode = getFormItemVal($(".mobile-code")); if (inputValide(mobileCode, "isEmpty")) { ErroMsg(errorMapping(-107)); return false } var valideCode = getFormItemVal($(".valide-input-mb")); var isShowValCode = !$("#login-box").hasClass("mobilePhone-no-valide"); if (valideCode == "" && isShowValCode) { ErroMsg(errorMapping(-105)); return false } var returnUrl = $("input[name='ReturnUrl']").val() || ""; var valCodeKey = $("input[name='valCodeKey']").val() || ""; return { LoginType: 1, UserName: mobile, ValCode: valideCode, Password: mobileCode, ReturnUrl: returnUrl, IsShowValCode: isShowValCode, ValCodeKey: valCodeKey } }; var getAccountData = function () { var email = getFormItemVal($(".email-name")); if (inputValide(email, "isEmpty")) { ErroMsg(errorMapping(-102)); return false } if (!(inputValide(email, "isEmail") || inputValide(email, "isPhone"))) { ErroMsg(errorMapping(-101)); return false } else { createCookie("user-info", email, 20) } var psw = getFormItemVal($(".psw")); if (inputValide(psw, "isEmpty")) { ErroMsg(errorMapping(-106)); return false } var valideCode = getFormItemVal($(".valide-input-account")); var isShowValCode = !$("#login-box").hasClass("account-no-valide"); if (valideCode == "" && isShowValCode) { ErroMsg("验证码不能为空"); return false } var rememberMe = $(".check-box").attr("status") == "true" ? true : false; var returnUrl = $("input[name='ReturnUrl']").val(); var valCodeKey = getFormItemVal($("input[name='valCodeKey']")); return { LoginType: 0, UserName: email, Password: psw, Remember: rememberMe, ReturnUrl: returnUrl, ValCode: valideCode, IsShowValCode: isShowValCode, ValCodeKey: valCodeKey } }; var SQcodeLogin = function () { } }); $(function () { var cmtNd = ["psw", "valide-input-account", "mobile-code", "valide-input-mb"]; var l = cmtNd.length; while (l--) { $("." + cmtNd[l]).on("keyup", function (e) { if (e.keyCode == 13) { $(".login-btn").click() } }) } }); $(function () { $("input").placeholder({ customClass: "my-placeholder" }) }); $(function () { $.fn.extend({ SliderObject: function (objMoved) { var mouseDownPosiX; var mouseDownPosiY; var InitPositionX; var InitPositionY; var obj = $(objMoved) == undefined ? $(this) : $(objMoved); $(this).mousedown(function (e) { mouseDownPosiX = e.pageX; mouseDownPosiY = e.pageY; InitPositionX = obj.css("left").replace("px", ""); InitPositionY = obj.css("top").replace("px", ""); obj.mousemove(function (e) { var tempX = parseInt(e.pageX) - parseInt(mouseDownPosiX) + parseInt(InitPositionX); var tempY = parseInt(e.pageY) - parseInt(mouseDownPosiY) + parseInt(InitPositionY); obj.css("left", tempX + "px").css("top", tempY + "px") }).mouseup(function () { obj.unbind("mousemove") }).mouseleave(function () { obj.unbind("mousemove") }) }) } }); $(document).ready(function () { $(".drag-part").SliderObject($("#login-box")) }) });